pipeline {
    agent any

    environment {
        PROJECT_ID = 'lucid-diode-391208'
        CLUSTER_NAME = 'combat-analysis-cluster'
        LOCATION = 'us-central1'
        CREDENTIALS_ID = 'gke'
    }

    stages {
        stage('Build') {
            steps {
                bat "dotnet restore src/API/CombatAnalysis.UserApi/CombatAnalysis.UserApi.csproj"
                bat "dotnet build src/API/CombatAnalysis.UserApi/CombatAnalysis.UserApi.csproj"
            }
        }
        stage('Test') {
            steps {
                bat "dotnet test tests/CombatAnalysis.Parser.Tests/CombatAnalysis.Parser.Tests.csproj"
            }
        }
        stage('Docker push') {
            steps {
                bat "docker build -f src/API/CombatAnalysis.UserApi/Dockerfile --force-rm -t user-api ."
                bat "docker tag user-api:latest solinx/combat-analysis-user-api:latest"
                withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerhubpwd')]) {
                    bat "docker login -u solinx -p ${dockerhubpwd}"
                    bat "docker push solinx/combat-analysis-user-api:latest"
                }
            }
        }
        stage('Deploy to GKE') {
            steps{
                step([
                $class: 'KubernetesEngineBuilder',
                projectId: env.PROJECT_ID,
                clusterName: env.CLUSTER_NAME,
                location: env.LOCATION,
                manifestPattern: 'Deploy/UserApi/user-api-deploy.yaml',
                credentialsId: env.CREDENTIALS_ID,
                verifyDeployments: true])
            }
        }
    }
}
