<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllCombatsSaved" xml:space="preserve">
    <value>Все бои сохранены!</value>
  </data>
  <data name="AverageDamage" xml:space="preserve">
    <value>Ср. показатель урона</value>
  </data>
  <data name="AverageDamagePerSecond" xml:space="preserve">
    <value>Ср. показатель урона в сек.</value>
  </data>
  <data name="AverageDamageTaken" xml:space="preserve">
    <value>Ср. показатель поченного урна</value>
  </data>
  <data name="AverageDamageTakenPerSecond" xml:space="preserve">
    <value>Ср. показатель поченного урона в сек.</value>
  </data>
  <data name="AverageHeal" xml:space="preserve">
    <value>Ср. показать исцеления</value>
  </data>
  <data name="AverageHealPerSecond" xml:space="preserve">
    <value>Ср. показать исцеления в сек.</value>
  </data>
  <data name="AverageResources" xml:space="preserve">
    <value>Ср. показатель восст. ресурсов</value>
  </data>
  <data name="AverageResourcesPerSecond" xml:space="preserve">
    <value>Ср. показатель восст. ресурсов в сек.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="Damage" xml:space="preserve">
    <value>Урон</value>
  </data>
  <data name="DamageTaken" xml:space="preserve">
    <value>Пол. урон</value>
  </data>
  <data name="Deaths" xml:space="preserve">
    <value>Смертей</value>
  </data>
  <data name="Lose" xml:space="preserve">
    <value>Поражение</value>
  </data>
  <data name="Boss" xml:space="preserve">
    <value>Босс</value>
  </data>
  <data name="Healing" xml:space="preserve">
    <value>Исцеление</value>
  </data>
  <data name="Heroic" xml:space="preserve">
    <value>Г</value>
  </data>
  <data name="IndexOfDeath" xml:space="preserve">
    <value>Индекс смертей</value>
  </data>
  <data name="LoadingFailed" xml:space="preserve">
    <value>Не загружено</value>
  </data>
  <data name="MaxDamage" xml:space="preserve">
    <value>Макс. показатель урона</value>
  </data>
  <data name="MaxDamagePerSecond" xml:space="preserve">
    <value>Макс. показатель урона в сек.</value>
  </data>
  <data name="MaxDamageTaken" xml:space="preserve">
    <value>Макс. показатель поченного урона</value>
  </data>
  <data name="MaxDamageTakenPerSecond" xml:space="preserve">
    <value>Макс. показатель поченного урона в сек.</value>
  </data>
  <data name="MaxHeal" xml:space="preserve">
    <value>Макс. показать исцеления</value>
  </data>
  <data name="MaxHealPerSecond" xml:space="preserve">
    <value>Макс. показать исцеления в сек.</value>
  </data>
  <data name="MaxResources" xml:space="preserve">
    <value>Макс. показатель восст. ресурсов</value>
  </data>
  <data name="MaxResourcesPerSecond" xml:space="preserve">
    <value>Макс. показатель восст. ресурсов в сек.</value>
  </data>
  <data name="Normal" xml:space="preserve">
    <value>Н</value>
  </data>
  <data name="NotReady" xml:space="preserve">
    <value>Не загружен</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Загружен</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Обновить</value>
  </data>
  <data name="Repeat" xml:space="preserve">
    <value>Повторить</value>
  </data>
  <data name="Resources" xml:space="preserve">
    <value>Ресурсы</value>
  </data>
  <data name="ShowAverageInform" xml:space="preserve">
    <value>Показать среднею информацию за все бои</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Размер</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Статус</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Анализ</value>
  </data>
  <data name="Uploaded" xml:space="preserve">
    <value>Загружено:</value>
  </data>
  <data name="Uploading" xml:space="preserve">
    <value>Загрузка...</value>
  </data>
  <data name="Win" xml:space="preserve">
    <value>Победа</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Открыть</value>
  </data>
</root>