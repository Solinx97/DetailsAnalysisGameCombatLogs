<views:MvxWpfView
    x:Class="CombatAnalysis.App.Views.Chat.GroupChatMessagesView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="clr-namespace:CombatAnalysis.App.Converters"
    xmlns:loc="clr-namespace:CombatAnalysis.App.Localizations"
    xmlns:resx="clr-namespace:CombatAnalysis.App.Localizations.Resources.Chat"
    xmlns:uc="clr-namespace:CombatAnalysis.App.UserControls"
    xmlns:mvx="clr-namespace:MvvmCross.Platforms.Wpf.Binding;assembly=MvvmCross.Platforms.Wpf"
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    loc:LocalizationObject.ResourceManager="{x:Static resx:Resource.ResourceManager}"
    mc:Ignorable="d">

    <Grid>
        <Grid.Resources>
            <converters:TheNativeStringToVisibilityConverter x:Key="ToVisibility" />
            <converters:TheNativeStringToXAMLBoolConverter x:Key="ToXAMLBool" />
            <converters:TheNativeBoolToXAMLBoolConverter x:Key="BoolToXAMLBool" />
            <converters:TheNativeBoolToVisibilityConverter x:Key="BoolToVisibility" />
            <converters:TheNativeIntToVisibilityConverter x:Key="IntToVisibility" />
            <converters:TheNativeIntToXAMLBoolConverter x:Key="IntToXAMLBool" />
            <converters:TheNativeWhenTypeToStringConverter x:Key="WhenTypeToString" />
            <converters:StringToVisibilityMultyConverter x:Key="MultiplyToVisibility" />
        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.Effect>
                <DropShadowEffect BlurRadius="20" ShadowDepth="1" Direction="-90" Opacity="0.1"/>
            </Grid.Effect>

            <TextBlock Text="{Binding SelectedChatName}" FontSize="16" Margin="20 15" HorizontalAlignment="Left"/>
            
            <StackPanel Orientation="Horizontal" Margin="0 0 10 0" HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedMessageIndex, Converter={StaticResource IntToVisibility}, ConverterParameter='true:-1:>'}">
                    <Button mvx:Bi.nd="Command TurnOnEditModeCommand" ToolTip="{loc:Loc Close}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource textBoxButton}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="NavajoWhite"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <StackPanel>
                            <Icon:PackIconMaterial Kind="Pen" Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibility}, ConverterParameter='true:true'}"/>
                            <Icon:PackIconMaterial Foreground="Green" Kind="Pen" Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibility}, ConverterParameter='true:false'}"/>
                        </StackPanel>
                    </Button>

                    <Button mvx:Bi.nd="Command RemoveMessageCommand" IsEnabled="False" ToolTip="{loc:Loc Close}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource textBoxButton}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="NavajoWhite"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <StackPanel>
                            <Icon:PackIconMaterial Kind="Remote" Visibility="{Binding IsRemoveMode, Converter={StaticResource BoolToVisibility}, ConverterParameter='true:true'}"/>
                            <Icon:PackIconMaterial Foreground="Red" Kind="Remote" Visibility="{Binding IsRemoveMode, Converter={StaticResource BoolToVisibility}, ConverterParameter='true:false'}"/>
                        </StackPanel>
                    </Button>
                </StackPanel>

                <!--<TextBlock Text="and 3 others" VerticalAlignment="Center" Margin="7 0" Foreground="#8b8a8f" FontSize="11" />-->

                <Button Style="{StaticResource textBoxButton}" mvx:Bi.nd="Command ShowChatMenuCommand">
                    <Icon:PackIconMaterial Kind="DotsVertical" Width="14" Height="14" Foreground="#88878e"/>
                </Button>
            </StackPanel>
        </Grid>

        <TextBlock Name="myUsername" Text="{Binding MyAccount.Email}" Visibility="Collapsed"/>

        <StackPanel Grid.Column="3" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Right"
                    Orientation="Horizontal" Panel.ZIndex="1">
            <Border VerticalAlignment="Top" Margin="0 -35 10 0" Panel.ZIndex="2" 
                    Background="LightGray" Width="250" Height="130" Padding="10 0" CornerRadius="10"
                    Visibility="{Binding InviteToChatIsVisibly, Converter={StaticResource BoolToVisibility}, ConverterParameter='true:false'}">
                <StackPanel Orientation="Horizontal">
                    <StackPanel Width="200" Margin="0 20">
                        <ComboBox Height="30" Padding="5" IsEditable="True" StaysOpenOnEdit="True" ItemsSource="{Binding UsersToInviteToChat}"
                                  SelectedIndex="{Binding SelectedUsersForInviteToGroupChatIndex}" DisplayMemberPath="Email"
                                  Text="{Binding InputedUserEmailForInviteToChat}"/>
                        <TextBlock Text="{loc:Loc UserAdded}" HorizontalAlignment="Center" Margin="0 3" Foreground="Green"
                                   Visibility="{Binding AddUserToChatResponse, Converter={StaticResource IntToVisibility}, ConverterParameter='true:2:='}"/>
                        <TextBlock Text="{loc:Loc UserAddFailed}" HorizontalAlignment="Center" Margin="0 3" Foreground="Red"
                                   Visibility="{Binding AddUserToChatResponse, Converter={StaticResource IntToVisibility}, ConverterParameter='true:3:='}"/>
                        <Button Content="Add" Style="{StaticResource showButton}" Margin="10" Cursor="Hand"
                                IsEnabled="{Binding SelectedUsersForInviteToGroupChatIndex, Converter={StaticResource IntToXAMLBool}, ConverterParameter='0:>='}"
                                mvx:Bi.nd="Command InviteToChatCommand" />
                    </StackPanel>
                    <Button Style="{StaticResource textBoxButton}" mvx:Bi.nd="Command CloseInviteToChatCommand" VerticalAlignment="Top" ToolTip="{loc:Loc Close}">
                        <Icon:PackIconMaterial Foreground="Red" Kind="Close"/>
                    </Button>
                </StackPanel>
            </Border>
            <Border Grid.Row="1" Background="LightGray" Width="175" Height="110" Margin="0 -35 45 0" Padding="10" CornerRadius="10" Panel.ZIndex="3"
                HorizontalAlignment="Right" VerticalAlignment="Top"
                Visibility="{Binding ChatMenuIsVisibly, Converter={StaticResource BoolToVisibility}, ConverterParameter='true:false'}">
                <StackPanel>
                    <Button Margin="5" Background="Transparent" BorderThickness="0" mvx:Bi.nd="Command OpenInviteToChatCommand">
                        <TextBlock Text="{loc:Loc AddUser}"/>
                    </Button>
                    <Button Margin="5" Background="Transparent" BorderThickness="0">
                        <TextBlock Text="{loc:Loc Settings}"/>
                    </Button>
                    <Button Margin="5" Background="Transparent" BorderThickness="0">
                        <TextBlock  Text="{loc:Loc RemoveUser}"/>
                    </Button>
                </StackPanel>
            </Border>
        </StackPanel>

        <ListBox Name="Tyui" Grid.Row="1" HorizontalContentAlignment="Stretch" Margin="0" ItemsSource="{Binding Messages}" SelectedItem="{Binding SelectedMessage}"
                 SelectedIndex="{Binding SelectedMessageIndex}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <uc:ChatSeparator Title="{Binding Path=DayTimeType, Converter={StaticResource WhenTypeToString}}"/>
                        <StackPanel>
                            <StackPanel.Visibility>
                                <MultiBinding Converter="{StaticResource MultiplyToVisibility}" ConverterParameter="true">
                                    <Binding Path="Username" />
                                    <Binding ElementName="myUsername" Path="Text" />
                                </MultiBinding>
                            </StackPanel.Visibility>

                            <uc:UserChat UserName="{Binding Path=Username}"/>
                            <uc:MessageChat Color="#ff82a3" Message="{Binding Path=Message}"/>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Time, StringFormat=hh\\:mm}" Style="{StaticResource timeText}"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel>
                            <StackPanel.Visibility>
                                <MultiBinding Converter="{StaticResource MultiplyToVisibility}">
                                    <Binding Path="Username" />
                                    <Binding ElementName="myUsername" Path="Text" />
                                </MultiBinding>
                            </StackPanel.Visibility>

                            <uc:MyMessageChat x:Name="MyMessage"  Message="{Binding Path=Message}"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <TextBlock Text="{Binding Path=Time, StringFormat=hh\\:mm}" Style="{StaticResource timeTextRight}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Grid Grid.Row="2" Margin="10 0">
            <Grid Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibility}, ConverterParameter='true:true'}" ToolTip="{loc:Loc SendMessage}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Grid>
                    <TextBlock Margin="15 0 120 0" VerticalAlignment="Center" Foreground="#868686" Panel.ZIndex="1"
                                   IsHitTestVisible="False" Text="{loc:Loc TypeMessage}" Visibility="{Binding ElementName=txtMessage, Path=Text.IsEmpty, Converter={StaticResource BoolToVisibility}}"/>
                    <TextBox Name="txtMessage" Style="{StaticResource messageTextBox}" Text="{Binding Message}"/>

                    <StackPanel Orientation="Horizontal" Margin="0 0 8 0" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <Button Style="{StaticResource textBoxButton}" ToolTip="{loc:Loc Copy}">
                            <Icon:PackIconMaterial Kind="BookmarkCheckOutline" Foreground="#a6a6a6"/>
                        </Button>
                        <Button Style="{StaticResource textBoxButton}" ToolTip="{loc:Loc AttachDocument}">
                            <Icon:PackIconMaterial Kind="Paperclip" Foreground="#a6a6a6"/>
                        </Button>
                        <Button Style="{StaticResource textBoxButton}" ToolTip="{loc:Loc CreateVoiceMessage}">
                            <Icon:PackIconMaterial Kind="Microphone" Foreground="#a6a6a6"/>
                        </Button>
                    </StackPanel>
                </Grid>

                <Button Grid.Column="1" Margin="5 0 0 0" Style="{StaticResource textBoxButton}" mvx:Bi.nd="Command SendMessageCommand">
                    <Icon:PackIconMaterial Kind="Send" Margin="3 0 0 2" Width="16" Foreground="#6f59d4">
                        <Icon:PackIconMaterial.LayoutTransform>
                            <RotateTransform Angle="-45"/>
                        </Icon:PackIconMaterial.LayoutTransform>
                    </Icon:PackIconMaterial>
                </Button>
            </Grid>

            <Grid Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibility}, ConverterParameter='true:false'}" ToolTip="{loc:Loc SendMessage}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Style="{StaticResource messageTextBox}" Text="{Binding SelectedMessage.Message}"/>

                <Button Grid.Column="1" Margin="5 0 0 0" Style="{StaticResource textBoxButton}" mvx:Bi.nd="Command EditMessageCommand" ToolTip="{loc:Loc SaveEdit}">
                    <Icon:PackIconMaterial Kind="Pen" Margin="3 0 0 2" Width="16" Foreground="Green">
                        <Icon:PackIconMaterial.LayoutTransform>
                            <RotateTransform Angle="-15"/>
                        </Icon:PackIconMaterial.LayoutTransform>
                    </Icon:PackIconMaterial>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</views:MvxWpfView>
