/*
Deployment script for Combat_Analysis

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Combat_Analysis"
:setvar DefaultFilePrefix "Combat_Analysis"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[AppUser]...';


GO
CREATE TABLE [dbo].[AppUser] (
    [Id]       NVARCHAR (450) NOT NULL,
    [Email]    NVARCHAR (MAX) NULL,
    [Password] NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_AppUser] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[BannedUser]...';


GO
CREATE TABLE [dbo].[BannedUser] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [WhomBannedId] NVARCHAR (MAX) NULL,
    [BannedUserId] NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_BannedUser] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Combat]...';


GO
CREATE TABLE [dbo].[Combat] (
    [Id]             INT                IDENTITY (1, 1) NOT NULL,
    [DungeonName]    NVARCHAR (MAX)     NULL,
    [Name]           NVARCHAR (MAX)     NULL,
    [DamageDone]     INT                NOT NULL,
    [HealDone]       INT                NOT NULL,
    [DamageTaken]    INT                NOT NULL,
    [EnergyRecovery] INT                NOT NULL,
    [DeathNumber]    INT                NOT NULL,
    [UsedBuffs]      INT                NOT NULL,
    [IsWin]          BIT                NOT NULL,
    [StartDate]      DATETIMEOFFSET (7) NOT NULL,
    [FinishDate]     DATETIMEOFFSET (7) NOT NULL,
    [CombatLogId]    INT                NOT NULL,
    CONSTRAINT [PK_Combat] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[CombatLog]...';


GO
CREATE TABLE [dbo].[CombatLog] (
    [Id]      INT                IDENTITY (1, 1) NOT NULL,
    [Name]    NVARCHAR (MAX)     NULL,
    [Date]    DATETIMEOFFSET (7) NOT NULL,
    [IsReady] BIT                NOT NULL,
    CONSTRAINT [PK_CombatLog] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[CombatLogByUser]...';


GO
CREATE TABLE [dbo].[CombatLogByUser] (
    [Id]              INT            IDENTITY (1, 1) NOT NULL,
    [CombatLogId]     INT            NOT NULL,
    [UserId]          NVARCHAR (MAX) NULL,
    [PersonalLogType] INT            NOT NULL,
    CONSTRAINT [PK_CombatLogByUser] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[CombatPlayer]...';


GO
CREATE TABLE [dbo].[CombatPlayer] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [UserName]       NVARCHAR (MAX) NULL,
    [EnergyRecovery] INT            NOT NULL,
    [DamageDone]     INT            NOT NULL,
    [HealDone]       INT            NOT NULL,
    [DamageTaken]    INT            NOT NULL,
    [UsedBuffs]      INT            NOT NULL,
    [CombatId]       INT            NOT NULL,
    CONSTRAINT [PK_CombatPlayer] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[DamageDone]...';


GO
CREATE TABLE [dbo].[DamageDone] (
    [Id]               INT            IDENTITY (1, 1) NOT NULL,
    [Value]            INT            NOT NULL,
    [Time]             NVARCHAR (MAX) NULL,
    [FromPlayer]       NVARCHAR (MAX) NULL,
    [ToEnemy]          NVARCHAR (MAX) NULL,
    [SpellOrItem]      NVARCHAR (MAX) NULL,
    [IsPeriodicDamage] BIT            NOT NULL,
    [IsDodge]          BIT            NOT NULL,
    [IsParry]          BIT            NOT NULL,
    [IsMiss]           BIT            NOT NULL,
    [IsResist]         BIT            NOT NULL,
    [IsImmune]         BIT            NOT NULL,
    [IsCrit]           BIT            NOT NULL,
    [CombatPlayerId]   INT            NOT NULL,
    CONSTRAINT [PK_DamageDone] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[DamageDone].[IX_DamageDone_CombatPlayerId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DamageDone_CombatPlayerId]
    ON [dbo].[DamageDone]([CombatPlayerId] ASC);


GO
PRINT N'Creating Table [dbo].[DamageDoneGeneral]...';


GO
CREATE TABLE [dbo].[DamageDoneGeneral] (
    [Id]              INT            IDENTITY (1, 1) NOT NULL,
    [Value]           INT            NOT NULL,
    [DamagePerSecond] FLOAT (53)     NOT NULL,
    [SpellOrItem]     NVARCHAR (MAX) NULL,
    [CritNumber]      INT            NOT NULL,
    [MissNumber]      INT            NOT NULL,
    [CastNumber]      INT            NOT NULL,
    [MinValue]        INT            NOT NULL,
    [MaxValue]        INT            NOT NULL,
    [AverageValue]    FLOAT (53)     NOT NULL,
    [CombatPlayerId]  INT            NOT NULL,
    CONSTRAINT [PK_DamageDoneGeneral] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[DamageTaken]...';


GO
CREATE TABLE [dbo].[DamageTaken] (
    [Id]               INT            IDENTITY (1, 1) NOT NULL,
    [Value]            INT            NOT NULL,
    [Time]             NVARCHAR (MAX) NULL,
    [FromEnemy]        NVARCHAR (MAX) NULL,
    [ToPlayer]         NVARCHAR (MAX) NULL,
    [SpellOrItem]      NVARCHAR (MAX) NULL,
    [IsPeriodicDamage] BIT            NOT NULL,
    [Resisted]         INT            NOT NULL,
    [Absorbed]         INT            NOT NULL,
    [Blocked]          INT            NOT NULL,
    [RealDamage]       INT            NOT NULL,
    [Mitigated]        INT            NOT NULL,
    [IsDodge]          BIT            NOT NULL,
    [IsParry]          BIT            NOT NULL,
    [IsMiss]           BIT            NOT NULL,
    [IsResist]         BIT            NOT NULL,
    [IsImmune]         BIT            NOT NULL,
    [IsCrushing]       BIT            NOT NULL,
    [CombatPlayerId]   INT            NOT NULL,
    CONSTRAINT [PK_DamageTaken] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[DamageTaken].[IX_DamageTaken_CombatPlayerId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DamageTaken_CombatPlayerId]
    ON [dbo].[DamageTaken]([CombatPlayerId] ASC);


GO
PRINT N'Creating Table [dbo].[DamageTakenGeneral]...';


GO
CREATE TABLE [dbo].[DamageTakenGeneral] (
    [Id]                   INT            IDENTITY (1, 1) NOT NULL,
    [Value]                INT            NOT NULL,
    [DamageTakenPerSecond] FLOAT (53)     NOT NULL,
    [SpellOrItem]          NVARCHAR (MAX) NULL,
    [CritNumber]           INT            NOT NULL,
    [MissNumber]           INT            NOT NULL,
    [CastNumber]           INT            NOT NULL,
    [MinValue]             INT            NOT NULL,
    [MaxValue]             INT            NOT NULL,
    [AverageValue]         FLOAT (53)     NOT NULL,
    [CombatPlayerId]       INT            NOT NULL,
    CONSTRAINT [PK_DamageTakenGeneral] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[GroupChat]...';


GO
CREATE TABLE [dbo].[GroupChat] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (MAX) NULL,
    [ShortName]      NVARCHAR (MAX) NULL,
    [LastMessage]    NVARCHAR (MAX) NULL,
    [MemberNumber]   INT            NOT NULL,
    [ChatPolicyType] INT            NOT NULL,
    [OwnerId]        NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_GroupChat] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[GroupChatMessage]...';


GO
CREATE TABLE [dbo].[GroupChatMessage] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Message]     NVARCHAR (MAX) NULL,
    [Time]        TIME (7)       NOT NULL,
    [GroupChatId] INT            NOT NULL,
    [OwnerId]     NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_GroupChatMessage] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[GroupChatUser]...';


GO
CREATE TABLE [dbo].[GroupChatUser] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [UserId]      NVARCHAR (MAX) NULL,
    [GroupChatId] INT            NOT NULL,
    CONSTRAINT [PK_GroupChatUser] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[HealDone]...';


GO
CREATE TABLE [dbo].[HealDone] (
    [Id]                INT            IDENTITY (1, 1) NOT NULL,
    [ValueWithOverheal] INT            NOT NULL,
    [Time]              NVARCHAR (MAX) NULL,
    [Overheal]          INT            NOT NULL,
    [Value]             INT            NOT NULL,
    [FromPlayer]        NVARCHAR (MAX) NULL,
    [ToPlayer]          NVARCHAR (MAX) NULL,
    [SpellOrItem]       NVARCHAR (MAX) NULL,
    [IsCrit]            BIT            NOT NULL,
    [IsFullOverheal]    BIT            NOT NULL,
    [CombatPlayerId]    INT            NOT NULL,
    CONSTRAINT [PK_HealDone] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[HealDone].[IX_HealDone_CombatPlayerId]...';


GO
CREATE NONCLUSTERED INDEX [IX_HealDone_CombatPlayerId]
    ON [dbo].[HealDone]([CombatPlayerId] ASC);


GO
PRINT N'Creating Table [dbo].[HealDoneGeneral]...';


GO
CREATE TABLE [dbo].[HealDoneGeneral] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [Value]          INT            NOT NULL,
    [HealPerSecond]  FLOAT (53)     NOT NULL,
    [SpellOrItem]    NVARCHAR (MAX) NULL,
    [CritNumber]     INT            NOT NULL,
    [CastNumber]     INT            NOT NULL,
    [MinValue]       INT            NOT NULL,
    [MaxValue]       INT            NOT NULL,
    [AverageValue]   FLOAT (53)     NOT NULL,
    [CombatPlayerId] INT            NOT NULL,
    CONSTRAINT [PK_HealDoneGeneral] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[InviteToGroupChat]...';


GO
CREATE TABLE [dbo].[InviteToGroupChat] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [UserId]      NVARCHAR (MAX) NULL,
    [Response]    INT            NOT NULL,
    [GroupChatId] INT            NOT NULL,
    CONSTRAINT [PK_InviteToGroupChat] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[PersonalChat]...';


GO
CREATE TABLE [dbo].[PersonalChat] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [LastMessage] NVARCHAR (MAX) NULL,
    [InitiatorId] NVARCHAR (MAX) NULL,
    [CompanionId] NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_PersonalChat] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[PersonalChatMessage]...';


GO
CREATE TABLE [dbo].[PersonalChatMessage] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [Message]        NVARCHAR (MAX) NULL,
    [Time]           TIME (7)       NOT NULL,
    [PersonalChatId] INT            NOT NULL,
    [OwnerId]        NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_PersonalChatMessage] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[RefreshToken]...';


GO
CREATE TABLE [dbo].[RefreshToken] (
    [Id]      NVARCHAR (450)     NOT NULL,
    [UserId]  NVARCHAR (MAX)     NULL,
    [Token]   NVARCHAR (MAX)     NULL,
    [Expires] DATETIMEOFFSET (7) NOT NULL,
    CONSTRAINT [PK_RefreshToken] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[ResourceRecovery]...';


GO
CREATE TABLE [dbo].[ResourceRecovery] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [Value]          INT            NOT NULL,
    [Time]           NVARCHAR (MAX) NULL,
    [SpellOrItem]    NVARCHAR (MAX) NULL,
    [CombatPlayerId] INT            NOT NULL,
    CONSTRAINT [PK_ResourceRecovery] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[ResourceRecovery].[IX_ResourceRecovery_CombatPlayerId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ResourceRecovery_CombatPlayerId]
    ON [dbo].[ResourceRecovery]([CombatPlayerId] ASC);


GO
PRINT N'Creating Table [dbo].[ResourceRecoveryGeneral]...';


GO
CREATE TABLE [dbo].[ResourceRecoveryGeneral] (
    [Id]                INT            IDENTITY (1, 1) NOT NULL,
    [Value]             INT            NOT NULL,
    [ResourcePerSecond] FLOAT (53)     NOT NULL,
    [SpellOrItem]       NVARCHAR (MAX) NULL,
    [CastNumber]        INT            NOT NULL,
    [MinValue]          INT            NOT NULL,
    [MaxValue]          INT            NOT NULL,
    [AverageValue]      FLOAT (53)     NOT NULL,
    [CombatPlayerId]    INT            NOT NULL,
    CONSTRAINT [PK_ResourceRecoveryGeneral] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Procedure [dbo].[DeleteAppUserById]...';


GO
CREATE PROCEDURE [dbo].[DeleteAppUserById]
	@id NVARCHAR (MAX)
AS
	DELETE
	FROM AppUser
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteBannedUserById]...';


GO
CREATE PROCEDURE [dbo].[DeleteBannedUserById]
	@id int
AS
	DELETE
	FROM BannedUser
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteCombatById]...';


GO
CREATE PROCEDURE [dbo].[DeleteCombatById]
	@id int
AS
	DELETE
	FROM Combat
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteCombatLogById]...';


GO
CREATE PROCEDURE [dbo].[DeleteCombatLogById]
	@id int
AS
	DELETE
	FROM CombatLog
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteCombatLogByUserById]...';


GO
CREATE PROCEDURE [dbo].[DeleteCombatLogByUserById]
	@id int
AS
	DELETE
	FROM CombatLogByUser
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteCombatPlayerById]...';


GO
CREATE PROCEDURE [dbo].[DeleteCombatPlayerById]
	@id int
AS
	DELETE
	FROM CombatPlayer
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteDamageDoneById]...';


GO
CREATE PROCEDURE [dbo].[DeleteDamageDoneById]
	@id int
AS
	DELETE
	FROM DamageDone
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteDamageDoneGeneralById]...';


GO
CREATE PROCEDURE [dbo].[DeleteDamageDoneGeneralById]
	@id int
AS
	DELETE
	FROM DamageDoneGeneral
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteDamageTakenById]...';


GO
CREATE PROCEDURE [dbo].[DeleteDamageTakenById]
	@id int
AS
	DELETE
	FROM DamageTaken
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteDamageTakenGeneralById]...';


GO
CREATE PROCEDURE [dbo].[DeleteDamageTakenGeneralById]
	@id int
AS
	DELETE
	FROM DamageTakenGeneral
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteGroupChatById]...';


GO
CREATE PROCEDURE [dbo].[DeleteGroupChatById]
	@id int
AS
	DELETE
	FROM GroupChat
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteGroupChatMessageById]...';


GO
CREATE PROCEDURE [dbo].[DeleteGroupChatMessageById]
	@id int
AS
	DELETE
	FROM GroupChatMessage
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteGroupChatUserById]...';


GO
CREATE PROCEDURE [dbo].[DeleteGroupChatUserById]
	@id int
AS
	DELETE
	FROM GroupChatUser
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteHealDoneById]...';


GO
CREATE PROCEDURE [dbo].[DeleteHealDoneById]
	@id int
AS
	DELETE
	FROM HealDone
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteHealDoneGeneralById]...';


GO
CREATE PROCEDURE [dbo].[DeleteHealDoneGeneralById]
	@id int
AS
	DELETE
	FROM HealDoneGeneral
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteInviteToGroupChatById]...';


GO
CREATE PROCEDURE [dbo].[DeleteInviteToGroupChatById]
	@id int
AS
	DELETE
	FROM InviteToGroupChat
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeletePersonalChatById]...';


GO
CREATE PROCEDURE [dbo].[DeletePersonalChatById]
	@id int
AS
	DELETE
	FROM PersonalChat
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeletePersonalChatMessageById]...';


GO
CREATE PROCEDURE [dbo].[DeletePersonalChatMessageById]
	@id int
AS
	DELETE
	FROM PersonalChatMessage
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteRefreshTokenById]...';


GO
CREATE PROCEDURE [dbo].[DeleteRefreshTokenById]
	@id int
AS
	DELETE
	FROM RefreshToken
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteResourceRecoveryById]...';


GO
CREATE PROCEDURE [dbo].[DeleteResourceRecoveryById]
	@id int
AS
	DELETE
	FROM ResourceRecovery
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[DeleteResourceRecoveryGeneralById]...';


GO
CREATE PROCEDURE [dbo].[DeleteResourceRecoveryGeneralById]
	@id int
AS
	DELETE
	FROM ResourceRecoveryGeneral
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllAppUser]...';


GO
CREATE PROCEDURE [dbo].[GetAllAppUser]
AS
	SELECT *
	FROM AppUser
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllBannedUser]...';


GO
CREATE PROCEDURE [dbo].[GetAllBannedUser]
AS
	SELECT *
	FROM BannedUser
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllCombat]...';


GO
CREATE PROCEDURE [dbo].[GetAllCombat]
AS
	SELECT *
	FROM Combat
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllCombatLog]...';


GO
CREATE PROCEDURE [dbo].[GetAllCombatLog]
AS
	SELECT *
	FROM CombatLog
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllCombatLogByUser]...';


GO
CREATE PROCEDURE [dbo].[GetAllCombatLogByUser]
AS
	SELECT *
	FROM CombatLogByUser
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllCombatPlayer]...';


GO
CREATE PROCEDURE [dbo].[GetAllCombatPlayer]
AS
	SELECT *
	FROM CombatPlayer
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllDamageDone]...';


GO
CREATE PROCEDURE [dbo].[GetAllDamageDone]
AS
	SELECT *
	FROM DamageDone
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllDamageDoneGeneral]...';


GO
CREATE PROCEDURE [dbo].[GetAllDamageDoneGeneral]
AS
	SELECT *
	FROM DamageDoneGeneral
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllDamageTaken]...';


GO
CREATE PROCEDURE [dbo].[GetAllDamageTaken]
AS
	SELECT *
	FROM DamageTaken
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllDamageTakenGeneral]...';


GO
CREATE PROCEDURE [dbo].[GetAllDamageTakenGeneral]
AS
	SELECT *
	FROM DamageTakenGeneral
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllGroupChat]...';


GO
CREATE PROCEDURE [dbo].[GetAllGroupChat]
AS
	SELECT *
	FROM GroupChat
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllGroupChatMessage]...';


GO
CREATE PROCEDURE [dbo].[GetAllGroupChatMessage]
AS
	SELECT *
	FROM GroupChatMessage
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllGroupChatUser]...';


GO
CREATE PROCEDURE [dbo].[GetAllGroupChatUser]
AS
	SELECT *
	FROM GroupChatUser
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllHealDone]...';


GO
CREATE PROCEDURE [dbo].[GetAllHealDone]
AS
	SELECT *
	FROM HealDone
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllHealDoneGeneral]...';


GO
CREATE PROCEDURE [dbo].[GetAllHealDoneGeneral]
AS
	SELECT *
	FROM HealDoneGeneral
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllInviteToGroupChat]...';


GO
CREATE PROCEDURE [dbo].[GetAllInviteToGroupChat]
AS
	SELECT *
	FROM InviteToGroupChat
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllPersonalChat]...';


GO
CREATE PROCEDURE [dbo].[GetAllPersonalChat]
AS
	SELECT *
	FROM PersonalChat
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllPersonalChatMessage]...';


GO
CREATE PROCEDURE [dbo].[GetAllPersonalChatMessage]
AS
	SELECT *
	FROM PersonalChatMessage
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllRefreshToken]...';


GO
CREATE PROCEDURE [dbo].[GetAllRefreshToken]
AS
	SELECT *
	FROM RefreshToken
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllResourceRecovery]...';


GO
CREATE PROCEDURE [dbo].[GetAllResourceRecovery]
AS
	SELECT *
	FROM ResourceRecovery
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAllResourceRecoveryGeneral]...';


GO
CREATE PROCEDURE [dbo].[GetAllResourceRecoveryGeneral]
AS
	SELECT *
	FROM ResourceRecoveryGeneral
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetAppUserById]...';


GO
CREATE PROCEDURE [dbo].[GetAppUserById]
	@id NVARCHAR (MAX)
AS
	SELECT *
	FROM AppUser
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetBannedUserById]...';


GO
CREATE PROCEDURE [dbo].[GetBannedUserById]
	@id int
AS
	SELECT *
	FROM BannedUser
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetCombatById]...';


GO
CREATE PROCEDURE [dbo].[GetCombatById]
	@id int
AS
	SELECT *
	FROM Combat
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetCombatLogById]...';


GO
CREATE PROCEDURE [dbo].[GetCombatLogById]
	@id int
AS
	SELECT *
	FROM CombatLog
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetCombatLogByUserById]...';


GO
CREATE PROCEDURE [dbo].[GetCombatLogByUserById]
	@id int
AS
	SELECT *
	FROM CombatLogByUser
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetCombatPlayerById]...';


GO
CREATE PROCEDURE [dbo].[GetCombatPlayerById]
	@id int
AS
	SELECT *
	FROM CombatPlayer
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetDamageDoneById]...';


GO
CREATE PROCEDURE [dbo].[GetDamageDoneById]
	@id int
AS
	SELECT *
	FROM DamageDone
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetDamageDoneGeneralById]...';


GO
CREATE PROCEDURE [dbo].[GetDamageDoneGeneralById]
	@id int
AS
	SELECT *
	FROM DamageDoneGeneral
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetDamageTakenById]...';


GO
CREATE PROCEDURE [dbo].[GetDamageTakenById]
	@id int
AS
	SELECT *
	FROM DamageTaken
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetDamageTakenGeneralById]...';


GO
CREATE PROCEDURE [dbo].[GetDamageTakenGeneralById]
	@id int
AS
	SELECT *
	FROM DamageTakenGeneral
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetGroupChatById]...';


GO
CREATE PROCEDURE [dbo].[GetGroupChatById]
	@id int
AS
	SELECT *
	FROM GroupChat
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetGroupChatMessageById]...';


GO
CREATE PROCEDURE [dbo].[GetGroupChatMessageById]
	@id int
AS
	SELECT *
	FROM GroupChatMessage
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetGroupChatUserById]...';


GO
CREATE PROCEDURE [dbo].[GetGroupChatUserById]
	@id int
AS
	SELECT *
	FROM GroupChatUser
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetHealDoneById]...';


GO
CREATE PROCEDURE [dbo].[GetHealDoneById]
	@id int
AS
	SELECT *
	FROM HealDone
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetHealDoneGeneralById]...';


GO
CREATE PROCEDURE [dbo].[GetHealDoneGeneralById]
	@id int
AS
	SELECT *
	FROM HealDoneGeneral
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetInviteToGroupChatById]...';


GO
CREATE PROCEDURE [dbo].[GetInviteToGroupChatById]
	@id int
AS
	SELECT *
	FROM InviteToGroupChat
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetPersonalChatById]...';


GO
CREATE PROCEDURE [dbo].[GetPersonalChatById]
	@id int
AS
	SELECT *
	FROM PersonalChat
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetPersonalChatMessageById]...';


GO
CREATE PROCEDURE [dbo].[GetPersonalChatMessageById]
	@id int
AS
	SELECT *
	FROM PersonalChatMessage
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetRefreshTokenById]...';


GO
CREATE PROCEDURE [dbo].[GetRefreshTokenById]
	@id int
AS
	SELECT *
	FROM RefreshToken
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetResourceRecoveryById]...';


GO
CREATE PROCEDURE [dbo].[GetResourceRecoveryById]
	@id int
AS
	SELECT *
	FROM ResourceRecovery
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[GetResourceRecoveryGeneralById]...';


GO
CREATE PROCEDURE [dbo].[GetResourceRecoveryGeneralById]
	@id int
AS
	SELECT *
	FROM ResourceRecoveryGeneral
	WHERE Id = @id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoAppUser]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoAppUser]
	@Id NVARCHAR (MAX),
	@Email NVARCHAR (MAX),
	@Password NVARCHAR (MAX)
AS
	DECLARE @OutputTbl TABLE (Id NVARCHAR (MAX),Email NVARCHAR (MAX),Password NVARCHAR (MAX))
	INSERT INTO AppUser
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Id,@Email,@Password)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoBannedUser]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoBannedUser]
	@WhomBannedId NVARCHAR (MAX),
	@BannedUserId NVARCHAR (MAX)
AS
	DECLARE @OutputTbl TABLE (Id INT,WhomBannedId NVARCHAR (MAX),BannedUserId NVARCHAR (MAX))
	INSERT INTO BannedUser
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@WhomBannedId,@BannedUserId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoCombat]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoCombat]
	@DungeonName NVARCHAR (MAX),
	@Name NVARCHAR (MAX),
	@DamageDone INT,
	@HealDone INT,
	@DamageTaken INT,
	@EnergyRecovery INT,
	@DeathNumber INT,
	@UsedBuffs INT,
	@IsWin BIT,
	@StartDate DATETIMEOFFSET (7),
	@FinishDate DATETIMEOFFSET (7),
	@CombatLogId INT
AS
	DECLARE @OutputTbl TABLE (Id INT,DungeonName NVARCHAR (MAX),Name NVARCHAR (MAX),DamageDone INT,HealDone INT,DamageTaken INT,EnergyRecovery INT,DeathNumber INT,UsedBuffs INT,IsWin BIT,StartDate DATETIMEOFFSET (7),FinishDate DATETIMEOFFSET (7),CombatLogId INT)
	INSERT INTO Combat
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@DungeonName,@Name,@DamageDone,@HealDone,@DamageTaken,@EnergyRecovery,@DeathNumber,@UsedBuffs,@IsWin,@StartDate,@FinishDate,@CombatLogId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoCombatLog]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoCombatLog]
	@Name NVARCHAR (MAX),
	@Date DATETIMEOFFSET (7),
	@IsReady BIT
AS
	DECLARE @OutputTbl TABLE (Id INT,Name NVARCHAR (MAX),Date DATETIMEOFFSET (7),IsReady BIT)
	INSERT INTO CombatLog
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Name,@Date,@IsReady)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoCombatLogByUser]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoCombatLogByUser]
	@CombatLogId INT,
	@UserId NVARCHAR (MAX),
	@PersonalLogType INT
AS
	DECLARE @OutputTbl TABLE (Id INT,CombatLogId INT,UserId NVARCHAR (MAX),PersonalLogType INT)
	INSERT INTO CombatLogByUser
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@CombatLogId,@UserId,@PersonalLogType)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoCombatPlayer]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoCombatPlayer]
	@UserName NVARCHAR (MAX),
	@EnergyRecovery INT,
	@DamageDone INT,
	@HealDone INT,
	@DamageTaken INT,
	@UsedBuffs INT,
	@CombatId INT
AS
	DECLARE @OutputTbl TABLE (Id INT,UserName NVARCHAR (MAX),EnergyRecovery INT,DamageDone INT,HealDone INT,DamageTaken INT,UsedBuffs INT,CombatId INT)
	INSERT INTO CombatPlayer
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@UserName,@EnergyRecovery,@DamageDone,@HealDone,@DamageTaken,@UsedBuffs,@CombatId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoDamageDone]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoDamageDone]
	@Value INT,
	@Time NVARCHAR (MAX),
	@FromPlayer NVARCHAR (MAX),
	@ToEnemy NVARCHAR (MAX),
	@SpellOrItem NVARCHAR (MAX),
	@IsPeriodicDamage BIT,
	@IsDodge BIT,
	@IsParry BIT,
	@IsMiss BIT,
	@IsResist BIT,
	@IsImmune BIT,
	@IsCrit BIT,
	@CombatPlayerId INT
AS
	DECLARE @OutputTbl TABLE (Id INT,Value INT,Time NVARCHAR (MAX),FromPlayer NVARCHAR (MAX),ToEnemy NVARCHAR (MAX),SpellOrItem NVARCHAR (MAX),IsPeriodicDamage BIT,IsDodge BIT,IsParry BIT,IsMiss BIT,IsResist BIT,IsImmune BIT,IsCrit BIT,CombatPlayerId INT)
	INSERT INTO DamageDone
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Value,@Time,@FromPlayer,@ToEnemy,@SpellOrItem,@IsPeriodicDamage,@IsDodge,@IsParry,@IsMiss,@IsResist,@IsImmune,@IsCrit,@CombatPlayerId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoDamageDoneGeneral]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoDamageDoneGeneral]
	@Value INT,
	@DamagePerSecond FLOAT (53),
	@SpellOrItem NVARCHAR (MAX),
	@CritNumber INT,
	@MissNumber INT,
	@CastNumber INT,
	@MinValue INT,
	@MaxValue INT,
	@AverageValue FLOAT (53),
	@CombatPlayerId INT
AS
	DECLARE @OutputTbl TABLE (Id INT,Value INT,DamagePerSecond FLOAT (53),SpellOrItem NVARCHAR (MAX),CritNumber INT,MissNumber INT,CastNumber INT,MinValue INT,MaxValue INT,AverageValue FLOAT (53),CombatPlayerId INT)
	INSERT INTO DamageDoneGeneral
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Value,@DamagePerSecond,@SpellOrItem,@CritNumber,@MissNumber,@CastNumber,@MinValue,@MaxValue,@AverageValue,@CombatPlayerId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoDamageTaken]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoDamageTaken]
	@Value INT,
	@Time NVARCHAR (MAX),
	@FromEnemy NVARCHAR (MAX),
	@ToPlayer NVARCHAR (MAX),
	@SpellOrItem NVARCHAR (MAX),
	@IsPeriodicDamage BIT,
	@Resisted INT,
	@Absorbed INT,
	@Blocked INT,
	@RealDamage INT,
	@Mitigated INT,
	@IsDodge BIT,
	@IsParry BIT,
	@IsMiss BIT,
	@IsResist BIT,
	@IsImmune BIT,
	@IsCrushing BIT,
	@CombatPlayerId INT
AS
	DECLARE @OutputTbl TABLE (Id INT,Value INT,Time NVARCHAR (MAX),FromEnemy NVARCHAR (MAX),ToPlayer NVARCHAR (MAX),SpellOrItem NVARCHAR (MAX), IsPeriodicDamage BIT, Resisted INT,Absorbed INT,Blocked INT,RealDamage INT,Mitigated INT, IsDodge BIT,IsParry BIT,IsMiss BIT,IsResist BIT,IsImmune BIT,IsCrushing BIT,CombatPlayerId INT)
	INSERT INTO DamageTaken
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Value,@Time,@FromEnemy,@ToPlayer,@SpellOrItem,@IsPeriodicDamage,@Resisted,@Absorbed,@Blocked,@RealDamage,@Mitigated,@IsDodge,@IsParry,@IsMiss,@IsResist,@IsImmune,@IsCrushing,@CombatPlayerId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoDamageTakenGeneral]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoDamageTakenGeneral]
	@Value INT,
	@DamageTakenPerSecond FLOAT (53),
	@SpellOrItem NVARCHAR (MAX),
	@CritNumber INT,
	@MissNumber INT,
	@CastNumber INT,
	@MinValue INT,
	@MaxValue INT,
	@AverageValue FLOAT (53),
	@CombatPlayerId INT
AS
	DECLARE @OutputTbl TABLE (Id INT,Value INT,DamageTakenPerSecond FLOAT (53),SpellOrItem NVARCHAR (MAX),CritNumber INT,MissNumber INT,CastNumber INT,MinValue INT,MaxValue INT,AverageValue FLOAT (53),CombatPlayerId INT)
	INSERT INTO DamageTakenGeneral
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Value,@DamageTakenPerSecond,@SpellOrItem,@CritNumber,@MissNumber,@CastNumber,@MinValue,@MaxValue,@AverageValue,@CombatPlayerId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoGroupChat]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoGroupChat]
	@Name NVARCHAR (MAX),
	@ShortName NVARCHAR (MAX),
	@LastMessage NVARCHAR (MAX),
	@MemberNumber INT,
	@ChatPolicyType INT,
	@OwnerId NVARCHAR (MAX)
AS
	DECLARE @OutputTbl TABLE (Id INT,Name NVARCHAR (MAX),ShortName NVARCHAR (MAX),LastMessage NVARCHAR (MAX),MemberNumber INT,ChatPolicyType INT,OwnerId NVARCHAR (MAX))
	INSERT INTO GroupChat
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Name,@ShortName,@LastMessage,@MemberNumber,@ChatPolicyType,@OwnerId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoGroupChatMessage]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoGroupChatMessage]
	@Message NVARCHAR (MAX),
	@Time TIME (7),
	@GroupChatId INT,
	@OwnerId NVARCHAR (MAX)
AS
	DECLARE @OutputTbl TABLE (Id INT,Message NVARCHAR (MAX),Time TIME (7),GroupChatId INT, OwnerId NVARCHAR (MAX))
	INSERT INTO GroupChatMessage
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Message,@Time,@GroupChatId,@OwnerId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoGroupChatUser]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoGroupChatUser]
	@UserId NVARCHAR (MAX),
	@GroupChatId INT
AS
	DECLARE @OutputTbl TABLE (Id INT,UserId NVARCHAR (MAX),GroupChatId INT)
	INSERT INTO GroupChatUser
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@UserId,@GroupChatId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoHealDone]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoHealDone]
	@ValueWithOverheal INT,
	@Time NVARCHAR (MAX),
	@Overheal INT,
	@Value INT,
	@FromPlayer NVARCHAR (MAX),
	@ToPlayer NVARCHAR (MAX),
	@SpellOrItem NVARCHAR (MAX),
	@IsCrit BIT,
	@IsFullOverheal BIT,
	@CombatPlayerId INT
AS
	DECLARE @OutputTbl TABLE (Id INT,ValueWithOverheal INT,Time NVARCHAR (MAX),Overheal INT,Value INT,FromPlayer NVARCHAR (MAX),ToPlayer NVARCHAR (MAX),SpellOrItem NVARCHAR (MAX),IsCrit BIT,IsFullOverheal BIT,CombatPlayerId INT)
	INSERT INTO HealDone
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@ValueWithOverheal,@Time,@Overheal,@Value,@FromPlayer,@ToPlayer,@SpellOrItem,@IsCrit,@IsFullOverheal,@CombatPlayerId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoHealDoneGeneral]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoHealDoneGeneral]
	@Value INT,
	@HealPerSecond FLOAT (53),
	@SpellOrItem NVARCHAR (MAX),
	@CritNumber INT,
	@CastNumber INT,
	@MinValue INT,
	@MaxValue INT,
	@AverageValue FLOAT (53),
	@CombatPlayerId INT
AS
	DECLARE @OutputTbl TABLE (Id INT,Value INT,HealPerSecond FLOAT (53),SpellOrItem NVARCHAR (MAX),CritNumber INT,CastNumber INT,MinValue INT,MaxValue INT,AverageValue FLOAT (53),CombatPlayerId INT)
	INSERT INTO HealDoneGeneral
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Value,@HealPerSecond,@SpellOrItem,@CritNumber,@CastNumber,@MinValue,@MaxValue,@AverageValue,@CombatPlayerId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoInviteToGroupChat]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoInviteToGroupChat]
	@UserId NVARCHAR (MAX),
	@Response INT,
	@GroupChatId INT
AS
	DECLARE @OutputTbl TABLE (Id INT,UserId NVARCHAR (MAX),Response INT,GroupChatId INT)
	INSERT INTO InviteToGroupChat
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@UserId,@Response,@GroupChatId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoPersonalChat]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoPersonalChat]
	@LastMessage NVARCHAR (MAX),
	@InitiatorId NVARCHAR (MAX),
	@CompanionId NVARCHAR (MAX)
AS
	DECLARE @OutputTbl TABLE (Id INT,LastMessage NVARCHAR (MAX),InitiatorId NVARCHAR (MAX),CompanionId NVARCHAR (MAX))
	INSERT INTO PersonalChat
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@LastMessage,@InitiatorId,@CompanionId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoPersonalChatMessage]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoPersonalChatMessage]
	@Message NVARCHAR (MAX),
	@Time TIME (7),
	@PersonalChatId INT,
	@OwnerId NVARCHAR (MAX)
AS
	DECLARE @OutputTbl TABLE (Id INT,Message NVARCHAR (MAX),Time TIME (7),PersonalChatId INT, wnerId NVARCHAR (MAX))
	INSERT INTO PersonalChatMessage
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Message,@Time,@PersonalChatId,@OwnerId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoRefreshToken]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoRefreshToken]
	@Id NVARCHAR (MAX),
	@UserId NVARCHAR (MAX),
	@Token NVARCHAR (MAX),
	@Expires DATETIMEOFFSET (7)
AS
	DECLARE @OutputTbl TABLE (Id NVARCHAR (MAX),UserId NVARCHAR (MAX),Token NVARCHAR (MAX),Expires DATETIMEOFFSET (7))
	INSERT INTO RefreshToken
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Id,@UserId,@Token,@Expires)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoResourceRecovery]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoResourceRecovery]
	@Value INT,
	@Time NVARCHAR (MAX),
	@SpellOrItem NVARCHAR (MAX),
	@CombatPlayerId INT
AS
	DECLARE @OutputTbl TABLE (Id INT,Value INT,Time NVARCHAR (MAX),SpellOrItem NVARCHAR (MAX),CombatPlayerId INT)
	INSERT INTO ResourceRecovery
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Value,@Time,@SpellOrItem,@CombatPlayerId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[InsertIntoResourceRecoveryGeneral]...';


GO
CREATE PROCEDURE [dbo].[InsertIntoResourceRecoveryGeneral]
	@Value INT,
	@ResourcePerSecond FLOAT (53),
	@SpellOrItem NVARCHAR (MAX),
	@CastNumber INT,
	@MinValue INT,
	@MaxValue INT,
	@AverageValue FLOAT (53),
	@CombatPlayerId INT
AS
	DECLARE @OutputTbl TABLE (Id INT,Value INT,ResourcePerSecond FLOAT (53),SpellOrItem NVARCHAR (MAX),CastNumber INT,MinValue INT,MaxValue INT,AverageValue FLOAT (53),CombatPlayerId INT)
	INSERT INTO ResourceRecoveryGeneral
	OUTPUT INSERTED.* INTO @OutputTbl
	VALUES (@Value,@ResourcePerSecond,@SpellOrItem,@CastNumber,@MinValue,@MaxValue,@AverageValue,@CombatPlayerId)
	SELECT * FROM @OutputTbl
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateAppUser]...';


GO
CREATE PROCEDURE [dbo].[UpdateAppUser]
	@Id NVARCHAR (MAX),
	@Email NVARCHAR (MAX),
	@Password NVARCHAR (MAX)
AS 
	UPDATE AppUser
	SET Email = @Email,Password = @Password
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateBannedUser]...';


GO
CREATE PROCEDURE [dbo].[UpdateBannedUser]
	@Id INT,
	@WhomBannedId NVARCHAR (MAX),
	@BannedUserId NVARCHAR (MAX)
AS 
	UPDATE BannedUser
	SET WhomBannedId = @WhomBannedId,BannedUserId = @BannedUserId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateCombat]...';


GO
CREATE PROCEDURE [dbo].[UpdateCombat]
	@Id INT,
	@DungeonName NVARCHAR (MAX),
	@Name NVARCHAR (MAX),
	@DamageDone INT,
	@HealDone INT,
	@DamageTaken INT,
	@EnergyRecovery INT,
	@DeathNumber INT,
	@UsedBuffs INT,
	@IsWin BIT,
	@StartDate DATETIMEOFFSET (7),
	@FinishDate DATETIMEOFFSET (7),
	@CombatLogId INT
AS
	UPDATE Combat
	SET DungeonName = @DungeonName,Name = @Name,DamageDone = @DamageDone,HealDone = @HealDone,DamageTaken = @DamageTaken,EnergyRecovery = @EnergyRecovery,DeathNumber = @DeathNumber,UsedBuffs = @UsedBuffs,IsWin = @IsWin,StartDate = @StartDate,FinishDate = @FinishDate,CombatLogId = @CombatLogId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateCombatLog]...';


GO
CREATE PROCEDURE [dbo].[UpdateCombatLog]
	@Id INT,
	@Name NVARCHAR (MAX),
	@Date DATETIMEOFFSET (7),
	@IsReady BIT
AS 
	UPDATE CombatLog
	SET Name = @Name,Date = @Date,IsReady = @IsReady
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateCombatLogByUser]...';


GO
CREATE PROCEDURE [dbo].[UpdateCombatLogByUser]
	@Id INT,
	@CombatLogId INT,
	@UserId NVARCHAR (MAX),
	@PersonalLogType INT
AS
	UPDATE CombatLogByUser
	SET CombatLogId = @CombatLogId,UserId = @UserId,PersonalLogType = @PersonalLogType
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateCombatPlayer]...';


GO
CREATE PROCEDURE [dbo].[UpdateCombatPlayer]
	@Id INT,
	@UserName NVARCHAR (MAX),
	@EnergyRecovery INT,
	@DamageDone INT,
	@HealDone INT,
	@DamageTaken INT,
	@UsedBuffs INT,
	@CombatId INT
AS
	UPDATE CombatPlayer
	SET UserName = @UserName,EnergyRecovery = @EnergyRecovery,DamageDone = @DamageDone,HealDone = @HealDone,DamageTaken = @DamageTaken,UsedBuffs = @UsedBuffs,CombatId = @CombatId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateDamageDone]...';


GO
CREATE PROCEDURE [dbo].[UpdateDamageDone]
	@Id INT,
	@Value INT,
	@Time NVARCHAR (MAX),
	@FromPlayer NVARCHAR (MAX),
	@ToEnemy NVARCHAR (MAX),
	@SpellOrItem NVARCHAR (MAX),
	@IsPeriodicDamage BIT,
	@IsDodge BIT,
	@IsParry BIT,
	@IsMiss BIT,
	@IsResist BIT,
	@IsImmune BIT,
	@IsCrit BIT,
	@CombatPlayerId INT
AS
	UPDATE DamageDone
	SET Value = @Value,Time = @Time,FromPlayer = @FromPlayer,ToEnemy = @ToEnemy,SpellOrItem = @SpellOrItem,IsPeriodicDamage = @IsPeriodicDamage,IsDodge = @IsDodge,IsParry = @IsParry,IsMiss = @IsMiss,IsResist = @IsResist,IsImmune = @IsImmune,IsCrit = @IsCrit,CombatPlayerId = @CombatPlayerId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateDamageDoneGeneral]...';


GO
CREATE PROCEDURE [dbo].[UpdateDamageDoneGeneral]
	@Id INT,
	@Value INT,
	@DamagePerSecond FLOAT (53),
	@SpellOrItem NVARCHAR (MAX),
	@CritNumber INT,
	@MissNumber INT,
	@CastNumber INT,
	@MinValue INT,
	@MaxValue INT,
	@AverageValue FLOAT (53),
	@CombatPlayerId INT
AS
	UPDATE DamageDoneGeneral
	SET Value = @Value,DamagePerSecond = @DamagePerSecond,SpellOrItem = @SpellOrItem,CritNumber = @CritNumber,MissNumber = @MissNumber,CastNumber = @CastNumber,MinValue = @MinValue,MaxValue = @MaxValue,AverageValue = @AverageValue,CombatPlayerId = @CombatPlayerId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateDamageTaken]...';


GO
CREATE PROCEDURE [dbo].[UpdateDamageTaken]
	@Id INT,
	@Value INT,
	@Time NVARCHAR (MAX),
	@FromEnemy NVARCHAR (MAX),
	@ToPlayer NVARCHAR (MAX),
	@SpellOrItem NVARCHAR (MAX),
	@IsPeriodicDamage BIT,
	@Resisted INT,
	@Absorbed INT,
	@Blocked INT,
	@RealDamage INT,
	@Mitigated INT,
	@IsDodge BIT,
	@IsParry BIT,
	@IsMiss BIT,
	@IsResist BIT,
	@IsImmune BIT,
	@IsCrushing BIT,
	@CombatPlayerId INT
AS
	UPDATE DamageTaken
	SET Value = @Value,Time = @Time,FromEnemy = @FromEnemy,ToPlayer = @ToPlayer,SpellOrItem = @SpellOrItem, IsPeriodicDamage = @IsPeriodicDamage, Resisted = @Resisted, Absorbed = @Absorbed, Blocked = @Blocked, RealDamage = @RealDamage, Mitigated = @Mitigated, IsDodge = @IsDodge,IsParry = @IsParry,IsMiss = @IsMiss,IsResist = @IsResist,IsImmune = @IsImmune,IsCrushing = @IsCrushing,CombatPlayerId = @CombatPlayerId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateDamageTakenGeneral]...';


GO
CREATE PROCEDURE [dbo].[UpdateDamageTakenGeneral]
	@Id INT,
	@Value INT,
	@DamageTakenPerSecond FLOAT (53),
	@SpellOrItem NVARCHAR (MAX),
	@CritNumber INT,
	@MissNumber INT,
	@CastNumber INT,
	@MinValue INT,
	@MaxValue INT,
	@AverageValue FLOAT (53),
	@CombatPlayerId INT
AS
	UPDATE DamageTakenGeneral
	SET Value = @Value,DamageTakenPerSecond = @DamageTakenPerSecond,SpellOrItem = @SpellOrItem,CritNumber = @CritNumber,MissNumber = @MissNumber,CastNumber = @CastNumber,MinValue = @MinValue,MaxValue = @MaxValue,AverageValue = @AverageValue,CombatPlayerId = @CombatPlayerId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateGroupChat]...';


GO
CREATE PROCEDURE [dbo].[UpdateGroupChat]
	@Id INT,
	@Name NVARCHAR (MAX),
	@ShortName NVARCHAR (MAX),
	@LastMessage NVARCHAR (MAX),
	@MemberNumber INT,
	@ChatPolicyType INT,
	@OwnerId NVARCHAR (MAX)
AS
	UPDATE GroupChat
	SET Name = @Name,ShortName = @ShortName,LastMessage = @LastMessage,MemberNumber = @MemberNumber,ChatPolicyType = @ChatPolicyType,OwnerId = @OwnerId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateGroupChatMessage]...';


GO
CREATE PROCEDURE [dbo].[UpdateGroupChatMessage]
	@Id INT,
	@Message NVARCHAR (MAX),
	@Time TIME (7),
	@GroupChatId INT,
	@OwnerId NVARCHAR (MAX)
AS
	UPDATE GroupChatMessage
	SET Message = @Message,Time = @Time,GroupChatId = @GroupChatId,OwnerId = @OwnerId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateGroupChatUser]...';


GO
CREATE PROCEDURE [dbo].[UpdateGroupChatUser]
	@Id INT,
	@UserId NVARCHAR (MAX),
	@GroupChatId INT
AS
	UPDATE GroupChatUser
	SET UserId = @UserId,GroupChatId = @GroupChatId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateHealDone]...';


GO
CREATE PROCEDURE [dbo].[UpdateHealDone]
	@Id INT,
	@ValueWithOverheal INT,
	@Time NVARCHAR (MAX),
	@Overheal INT,
	@Value INT,
	@FromPlayer NVARCHAR (MAX),
	@ToPlayer NVARCHAR (MAX),
	@SpellOrItem NVARCHAR (MAX),
	@IsCrit BIT,
	@IsFullOverheal BIT,
	@CombatPlayerId INT
AS
	UPDATE HealDone
	SET ValueWithOverheal = @ValueWithOverheal,Time = @Time,Overheal = @Overheal,Value = @Value,FromPlayer = @FromPlayer,ToPlayer = @ToPlayer,SpellOrItem = @SpellOrItem,IsCrit = @IsCrit,IsFullOverheal = @IsFullOverheal,CombatPlayerId = @CombatPlayerId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateHealDoneGeneral]...';


GO
CREATE PROCEDURE [dbo].[UpdateHealDoneGeneral]
	@Id INT,
	@Value INT,
	@HealPerSecond FLOAT (53),
	@SpellOrItem NVARCHAR (MAX),
	@CritNumber INT,
	@CastNumber INT,
	@MinValue INT,
	@MaxValue INT,
	@AverageValue FLOAT (53),
	@CombatPlayerId INT
AS 
	UPDATE HealDoneGeneral
	SET Value = @Value,HealPerSecond = @HealPerSecond,SpellOrItem = @SpellOrItem,CritNumber = @CritNumber,CastNumber = @CastNumber,MinValue = @MinValue,MaxValue = @MaxValue,AverageValue = @AverageValue,CombatPlayerId = @CombatPlayerId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateInviteToGroupChat]...';


GO
CREATE PROCEDURE [dbo].[UpdateInviteToGroupChat]
	@Id INT,
	@UserId NVARCHAR (MAX),
	@Response INT,
	@GroupChatId INT
AS
	UPDATE InviteToGroupChat
	SET UserId = @UserId,Response = @Response,GroupChatId = @GroupChatId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdatePersonalChat]...';


GO
CREATE PROCEDURE [dbo].[UpdatePersonalChat]
	@Id INT,
	@LastMessage NVARCHAR (MAX),
	@InitiatorId NVARCHAR (MAX),
	@CompanionId NVARCHAR (MAX)
AS
	UPDATE PersonalChat
	SET LastMessage = @LastMessage,InitiatorId = @InitiatorId,CompanionId = @CompanionId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdatePersonalChatMessage]...';


GO
CREATE PROCEDURE [dbo].[UpdatePersonalChatMessage]
	@Id INT,
	@Message NVARCHAR (MAX),
	@Time TIME (7),
	@PersonalChatId INT,
	@OwnerId NVARCHAR (MAX)
AS 
	UPDATE PersonalChatMessage
	SET Message = @Message,Time = @Time,PersonalChatId = @PersonalChatId,OwnerId = @OwnerId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateRefreshToken]...';


GO
CREATE PROCEDURE [dbo].[UpdateRefreshToken]
	@Id NVARCHAR (MAX),
	@UserId NVARCHAR (MAX),
	@Token NVARCHAR (MAX),
	@Expires DATETIMEOFFSET (7)
AS
	UPDATE RefreshToken
	SET UserId = @UserId,Token = @Token,Expires = @Expires
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateResourceRecovery]...';


GO
CREATE PROCEDURE [dbo].[UpdateResourceRecovery]
	@Id INT,
	@Value INT,
	@Time NVARCHAR (MAX),
	@SpellOrItem NVARCHAR (MAX),
	@CombatPlayerId INT
AS 
	UPDATE ResourceRecovery
	SET Value = @Value,Time = @Time,SpellOrItem = @SpellOrItem,CombatPlayerId = @CombatPlayerId
	WHERE Id = @Id
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[UpdateResourceRecoveryGeneral]...';


GO
CREATE PROCEDURE [dbo].[UpdateResourceRecoveryGeneral]
	@Id INT,
	@Value INT,
	@ResourcePerSecond FLOAT (53),
	@SpellOrItem NVARCHAR (MAX),
	@CastNumber INT,
	@MinValue INT,
	@MaxValue INT,
	@AverageValue FLOAT (53),
	@CombatPlayerId INT
AS 
	UPDATE ResourceRecoveryGeneral
	SET Value = @Value,ResourcePerSecond = @ResourcePerSecond,SpellOrItem = @SpellOrItem,CastNumber = @CastNumber,MinValue = @MinValue,MaxValue = @MaxValue,AverageValue = @AverageValue,CombatPlayerId = @CombatPlayerId
	WHERE Id = @Id
RETURN 0
GO
/*
Шаблон скрипта после развертывания							
--------------------------------------------------------------------------------------
 В данном файле содержатся инструкции SQL, которые будут добавлены в скрипт построения.		
 Используйте синтаксис SQLCMD для включения файла в скрипт после развертывания.			
 Пример:      :r .\myfile.sql								
 Используйте синтаксис SQLCMD для создания ссылки на переменную в скрипте после развертывания.		
 Пример:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- CombatLog
insert into dbo.CombatLog
values ('Combat #1', '09.27.2022 10:15:00', 'TRUE')

-- Combat
insert into dbo.Combat
values ('Dungeon #1', 'Boss #1', 3000, 2500, 4000, 500, 0, 0, 'TRUE', '09.26.2022 11:10:00', '09.26.2022 11:12:00', 1)

---- CombatLogByUser
--insert into dbo.Combat
--values ('Dungeon #1', 'Boss #1', 3000, 2500, 4000, 500, 0, 0, 'TRUE', '09.26.2022 11:10:00', '09.26.2022 11:12:00', 1)

-- CombatPlayer
insert into dbo.CombatPlayer
values ('Player #1', 650, 2750, 4255, 3210, 0, 1)

-- DamageDone
insert into dbo.DamageDone
values (275, '00:35', 'Player #1', 'Enemy #1', 'Spell #1', 'FALSE', 'FALSE', 'FALSE', 'FALSE', 'FALSE', 'FALSE', 'FALSE', 1)

-- DamageDoneGeneral
insert into dbo.DamageDoneGeneral
values (2750, 943, 'Spell #1', 2, 0, 18, 275, 650, 462, 1)

-- DamageTaken
insert into dbo.DamageTaken
values (148, '00:29', 'Enemy #1', 'Player #1', 'Spell #1', 'FALSE', 0, 0, 24, 192, 20, 'FALSE', 'FALSE', 'FALSE', 'FALSE', 'FALSE', 'TRUE', 1)

-- DamageTakenGeneral
insert into dbo.DamageTakenGeneral
values (3210, 745, 'Spell #1', 0, 0, 11, 411, 725, 568, 1)

-- HealDone
insert into dbo.HealDone
values (433, '00:30', 20, 513, 'Player #1', 'Player #2','Spell #1', 'FALSE', 'FALSE', 1)

-- HealDoneGeneral
insert into dbo.HealDoneGeneral
values (4255, 865, 'Spell #1', 0, 23, 411, 725, 568, 1)

-- ResourceRecovery
insert into dbo.ResourceRecovery
values (64, '00:26', 'Player #1', 1)

-- ResourceRecoveryGeneral
insert into dbo.ResourceRecoveryGeneral
values (650, 211, 'Spell #1', 9, 49, 227, 138, 1)
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
